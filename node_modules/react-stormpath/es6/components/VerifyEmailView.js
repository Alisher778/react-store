'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _LoginLink = require('../components/LoginLink');

var _LoginLink2 = _interopRequireDefault(_LoginLink);

var _UserActions = require('../actions/UserActions');

var _UserActions2 = _interopRequireDefault(_UserActions);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var VerifyEmailView = function (_React$Component) {
  _inherits(VerifyEmailView, _React$Component);

  function VerifyEmailView() {
    _classCallCheck(this, VerifyEmailView);

    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(VerifyEmailView).apply(this, arguments));

    _this.state = {
      status: 'VERIFYING'
    };
    return _this;
  }

  _createClass(VerifyEmailView, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var self = this;
      var spToken = this.props.spToken;

      _UserActions2.default.verifyEmail(spToken, function (err) {
        if (err) {
          self.setState({
            status: 'ERROR'
          });
        } else {
          self.setState({
            status: 'VERIFIED'
          });
        }
      });
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        { className: 'row' },
        _react2.default.createElement(
          'div',
          { className: 'col-sm-offset-4 col-xs-12 col-sm-4' },
          {
            VERIFYING: _react2.default.createElement(
              'p',
              { className: 'alert alert-warning' },
              'We are verifying your account.'
            ),
            VERIFIED: _react2.default.createElement(
              'p',
              { className: 'alert alert-success' },
              'Your account has has been verified! ',
              _react2.default.createElement(
                _LoginLink2.default,
                null,
                'Login Now.'
              )
            ),
            ERROR: _react2.default.createElement(
              'div',
              { className: 'alert alert-danger' },
              'This email verification link is not valid.'
            )
          }[this.state.status]
        )
      );
    }
  }]);

  return VerifyEmailView;
}(_react2.default.Component);

exports.default = VerifyEmailView;